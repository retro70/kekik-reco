name: Create Release

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Release version (e.g., 1.0.0)'
        required: true
        default: '1.0.0'
      release_notes:
        description: 'Release notes'
        required: false
        default: 'Bug fixes and improvements'

jobs:
  release:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up JDK 21
      uses: actions/setup-java@v4
      with:
        java-version: '21'
        distribution: 'temurin'
        
    - name: Set up Android SDK
      uses: android-actions/setup-android@v2
      
    - name: Cache Gradle packages
      uses: actions/cache@v3
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-
          
    - name: Create local.properties
      run: |
        echo "sdk.dir=$ANDROID_HOME" > local.properties
        
    - name: Build with Gradle
      run: ./gradlew clean build
      
    - name: Create extensions directory
      run: mkdir -p cloudstream-extensions
      
    - name: Copy AAR files
      run: |
        find . -name "*.aar" | grep "outputs/aar" | grep "release" | xargs -I {} cp {} cloudstream-extensions/
        
    - name: Create ZIP archive
      run: |
        cd cloudstream-extensions
        zip -r ../kekik-reco-extensions-v${{ github.event.inputs.version }}.zip .
        cd ..
        
    - name: Count extensions
      id: count
      run: |
        COUNT=$(find cloudstream-extensions -name "*.aar" | wc -l)
        echo "count=$COUNT" >> $GITHUB_OUTPUT
        
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: v${{ github.event.inputs.version }}
        release_name: Kekik Reco Extensions v${{ github.event.inputs.version }}
        body: |
          ## 🎉 Kekik Reco Extensions v${{ github.event.inputs.version }}
          
          ### 📦 İçerik
          - **${{ steps.count.outputs.count }} eklenti** derlendi
          - Tüm eklentiler Cloudstream ile uyumlu
          
          ### 📱 Kurulum
          1. `kekik-reco-extensions-v${{ github.event.inputs.version }}.zip` dosyasını indirin
          2. Cloudstream'i açın
          3. **Ayarlar > Eklentiler > Eklenti Yükle**
          4. ZIP dosyasını seçin
          
          ### 🔧 Değişiklikler
          ${{ github.event.inputs.release_notes }}
          
          ### 📋 Eklenti Listesi
          - Film eklentileri (Filmİzlesene, HDFilmCehennemi, vb.)
          - Dizi eklentileri (DiziPal, DiziBox, vb.)
          - Anime eklentileri (AnimeciX, AnimeIzlesene, vb.)
          - Diğer eklentiler (NetflixMirror, YouTube, vb.)
          
          ---
          
          ⭐ Bu projeyi beğendiyseniz yıldız vermeyi unutmayın!
        draft: false
        prerelease: false
        
    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./kekik-reco-extensions-v${{ github.event.inputs.version }}.zip
        asset_name: kekik-reco-extensions-v${{ github.event.inputs.version }}.zip
        asset_content_type: application/zip 